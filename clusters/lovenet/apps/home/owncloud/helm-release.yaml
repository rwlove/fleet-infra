---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: owncloud
  namespace: home
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://charts.bitnami.com/bitnami
      chart: owncloud
      version: 10.2.7
      sourceRef:
        kind: HelmRepository
        name: bitnami-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      registry: docker.io
      repository: bitnami/owncloud
      tag: 10.6.0-debian-10-r71
      pullPolicy: IfNotPresent
      debug: true

    ## Deployment pod host aliases
    ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
    ##
    hostAliases:
      # Necessary for apache-exporter to work
      - ip: "127.0.0.1"
        hostnames:
          - "status.localhost"

    replicaCount: 1

    ## Skip ownCloud installation wizard. Useful for migrations and restoring from SQL dump
    ## ref: https://github.com/bitnami/bitnami-docker-owncloud#configuration
    ##
    owncloudSkipInstall: false

    ## ownCloud host to create application URLs
    ## ref: https://github.com/bitnami/bitnami-docker-owncloud#configuration
    ##
    owncloudHost:

    ## User of the application
    ## ref: https://github.com/bitnami/bitnami-docker-owncloud#configuration
    ##
    owncloudUsername: user

    ## Application password
    ## Defaults to a random 10-character alphanumeric string if not set
    ## ref: https://github.com/bitnami/bitnami-docker-owncloud#configuration
    ##
    owncloudPassword: password

    ## Admin email
    ## ref: https://github.com/bitnami/bitnami-docker-owncloud#configuration
    ##
    owncloudEmail: terp4life2001@gmail.com

    ## Set to `yes` to allow the container to be started with blank passwords
    ## ref: https://github.com/bitnami/bitnami-docker-owncloud#environment-variables
    ##
    allowEmptyPassword: false

    updateStrategy:
      type: RollingUpdate

    ## MariaDB chart configuration
    ##
    ## https://github.com/bitnami/charts/blob/master/bitnami/mariadb/values.yaml
    ##
    mariadb:
      enabled: true
      architecture: standalone
      auth:
        ## ref: https://github.com/bitnami/bitnami-docker-mariadb#setting-the-root-password-on-first-run
        rootPassword: "password"
        ## MariaDB custom user and database
        ## ref: https://github.com/bitnami/bitnami-docker-mariadb/blob/master/README.md#creating-a-database-on-first-run
        ## ref: https://github.com/bitnami/bitnami-docker-mariadb/blob/master/README.md#creating-a-database-user-on-first-run
        ##
        database: bitnami_owncloud
        username: bn_owncloud
        password: "password"

      primary:
        persistence:
          enabled: true
          storageClass: owncloud-mariadb-storage-class
          accessMode: ReadWriteOnce
          size: 8Gi

    containerPorts:
      http: 8080
      https: 8443

    service:
      type: LoadBalancer
      loadBalancerIP: 192.168.6.49
      ports:
        - port: 8080
        - port: 8443

    persistence:
      enabled: true
      storageClass: "owncloud-config-storage-class"
      accessMode: ReadWriteOnce
      size: 8Gi

    ## Pod anti-affinity preset
    ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    ## Allowed values: soft, hard
    ##
    podAntiAffinityPreset: soft

    ## Init containers parameters:
    ## volumePermissions: Change the owner and group of the persistent volume mountpoint to runAsUser:fsGroup values from the securityContext section.
    ##
    volumePermissions:
      enabled: false
      image:
        registry: docker.io
        repository: bitnami/bitnami-shell
        tag: "10"
        pullPolicy: Always

    ## Configure Pods Security Context
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
    ##
    podSecurityContext:
      enabled: true
      fsGroup: 1001

    ## Configure Container Security Context (only main container)
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
    ##
    containerSecurityContext:
      enabled: true
      runAsUser: 1001

    ## Configure extra options for liveness, readiness and startup probes
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
    ##
    livenessProbe:
      enabled: true
      path: /status.php
      initialDelaySeconds: 120
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 6
      successThreshold: 1
    readinessProbe:
      enabled: true
      path: /status.php
      initialDelaySeconds: 30
      periodSeconds: 5
      timeoutSeconds: 3
      failureThreshold: 6
      successThreshold: 1
    startupProbe:
      enabled: false
      path: /status.php
      initialDelaySeconds: 0
      periodSeconds: 10
      timeoutSeconds: 3
      failureThreshold: 60
      successThreshold: 1

    ## Prometheus Exporter / Metrics
    ##
    metrics:
      enabled: false
      image:
        registry: docker.io
        repository: bitnami/apache-exporter
        tag: 0.8.0-debian-10-r315
        pullPolicy: IfNotPresent

      ## Prometheus exporter service parameters
      ##
      service:
        type: ClusterIP
        ## Metrics port
        ##
        port: 9117
        ## Annotations for the Prometheus exporter service
        ##
        annotations:
          prometheus.io/scrape: "true"
          prometheus.io/port: "{{ .Values.metrics.service.port }}"

    # Add custom certificates and certificate authorities to ownCloud container
    certificates:
      customCertificate:
        certificateSecret: ""
        chainSecret: {}
        # name: secret-name
        # key: secret-key
        certificateLocation: /etc/ssl/certs/ssl-cert-snakeoil.pem
        keyLocation: /etc/ssl/private/ssl-cert-snakeoil.key
        chainLocation: /etc/ssl/certs/mychain.pem
      customCAs: []
      ## Override container command
      ##
      command:
      ## Override container args
      ##
      args:
      # - secret: custom-CA
      # - secret: more-custom-CAs
      ## An array to add extra env vars
      ##
      extraEnvVars: []

      ## ConfigMap with extra environment variables
      ##
      extraEnvVarsCM:

      ## Secret with extra environment variables
      ##
      extraEnvVarsSecret:

      image:
        registry: docker.io
        repository: bitnami/bitnami-shell
        tag: "10"
        pullPolicy: IfNotPresent
