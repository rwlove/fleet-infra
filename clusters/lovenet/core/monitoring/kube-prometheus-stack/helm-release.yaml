---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://prometheus-community.github.io/helm-charts
      chart: kube-prometheus-stack
      version: 15.4.4
      sourceRef:
        kind: HelmRepository
        name: prometheus-community-charts
        namespace: flux-system
      interval: 5m
  timeout: 20m
  values:
    prometheusOperator:
      createCustomResource: false
    alertmanager:
      enabled: false
      config:
        global:
          resolve_timeout: 5m
        receivers:
        - name: 'null'
        - name: 'webhook'
          webhook_configs:
          - url: "http://192.168.1.35:9000/hooks/webhook-ups"
            send_resolved: false
        route:
          group_by: ['alertname', 'job']
          group_wait: 30s
          group_interval: 5m
          repeat_interval: 6h
          receiver: 'null'
          routes:
          - receiver: 'null'
            match:
              alertname: Watchdog
          - receiver: 'discord'
            match_re:
              # severity: critical|warning
              severity: critical
            continue: true
          - receiver: 'webhook'
            match:
              alertname: UPS15MinutesRemaining
            continue: true
        inhibit_rules:
        - source_match:
            severity: 'critical'
          target_match:
            severity: 'warning'
          equal: ['alertname', 'namespace']
      ingress:
        enabled: false
      service:
        type: LoadBalancer
        loadBalancerIP: 192.168.6.14
        ports:
        - port: 9094
      alertmanagerSpec:
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: alert-manager-storage-class
              resources:
                requests:
                  storage: 10Gi
    nodeExporter:
      serviceMonitor:
        relabelings:
        - action: replace
          regex: (.*)
          replacement: $1
          sourceLabels:
          - __meta_kubernetes_pod_node_name
          targetLabel: kubernetes_node
    grafana:
      enabled: false
    kubelet:
      enabled: true
      serviceMonitor:
        metricRelabelings:
        - action: replace
          sourceLabels:
          - node
          targetLabel: instance
    kubeApiServer:
      enabled: true
    kubeControllerManager:
      enabled: false
    kubeScheduler:
      enabled: false
    kubeProxy:
      enabled: false
    kubeEtcd:
      enabled: false
    prometheus:
      service:
        type: LoadBalancer
        loadBalancerIP: 192.168.6.10
        ports:
        - port: 9090
      ingress:
        enabled: false
        pathType: Prefix
        ingressClassName: "traefik"
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
        hosts:
        - "prometheus.${SECRET_DOMAIN}"
        tls:
        - hosts:
          - "prometheus.${SECRET_DOMAIN}"
      prometheusSpec:
        ruleSelector: {}
        ruleNamespaceSelector: {}
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelector: {}
        serviceMonitorNamespaceSelector: {}
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelector: {}
        podMonitorNamespaceSelector: {}
        podMonitorSelectorNilUsesHelmValues: false
        retention: 60d
        enableAdminAPI: true
        walCompression: true
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: "prometheus-storage-class"
              resources:
                requests:
                  storage: 50Gi
          # additionalScrapeConfigs:
          # - job_name: 'node-exporter'
          #   honor_timestamps: true
          #   static_configs:
          #   - targets:
          #     # opnsense
          #     - 192.168.1.1:9100
          #     # rocinante nas
          #     - 192.168.42.40:9100
          #     # serenity nas
          #     - 192.168.42.50:9100
          # - job_name: cadvisor
          #   honor_timestamps: true
          #   metrics_path: /metrics
          #   static_configs:
          #   - targets:
          #     # rocinante nas
          #     - 192.168.42.40:9123
          # - job_name: 'minio'
          #   honor_timestamps: true
          #   metrics_path: /minio/prometheus/metrics
          #   static_configs:
          #   - targets:
          #     - 192.168.42.40:9000
